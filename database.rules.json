{
  "rules": {
    // --- Nodos de Configuración (Servicios, Horario, Bloqueos) ---
    // Lectura pública para que la página de reservas funcione.
    // Escritura solo para el administrador.
    "services": {
      ".read": true,
      // Solo el administrador puede escribir (crear, modificar, eliminar) servicios.
      ".write": "auth != null && auth.uid === 'CTedcSU9XuV2QBbTdTilDHuCgAj2'",
      // Validación opcional para la estructura de cada servicio cuando el admin escribe
      "$serviceId": {
        ".validate": "newData.hasChildren(['id', 'name', 'duration', 'price', 'active']) || !newData.exists()"
      }
    },
    "standardSchedule": {
      ".read": true,
      // Solo el administrador puede escribir el horario estándar.
      ".write": "auth != null && auth.uid === 'CTedcSU9XuV2QBbTdTilDHuCgAj2'"
      // Puedes añadir validaciones más granulares por día si es necesario.
    },
    "blockedSlots": {
      ".read": true,
      // Solo el administrador puede escribir bloqueos específicos.
      ".write": "auth != null && auth.uid === 'CTedcSU9XuV2QBbTdTilDHuCgAj2'"
      // Puedes añadir validaciones para la estructura de los bloqueos si es necesario.
    },

    // --- Nodo de Citas (Appointments) ---
    "appointments": {
      // Solo el administrador puede leer la lista completa de citas.
      ".read": "auth != null && auth.uid === 'CTedcSU9XuV2QBbTdTilDHuCgAj2'",
      // Solo el administrador puede escribir directamente en el nodo raíz de appointments
      // (por ejemplo, para borrar todas las citas, lo cual es destructivo).
      ".write": "auth != null && auth.uid === 'CTedcSU9XuV2QBbTdTilDHuCgAj2'",

      // Reglas para citas individuales (bajo /appointments/$appointmentId)
      "$appointmentId": {
        // El administrador puede leer citas individuales (ya cubierto por la regla ".read" del padre).

        // Reglas de escritura para citas individuales:
        // 1. Si la cita NO existe (!data.exists()) Y se está escribiendo nueva data (newData.exists()),
        //    permite la escritura (esto es CREACIÓN, cualquiera puede hacerlo).
        // 2. O SI la cita SÍ existe (data.exists()) Y el usuario autenticado es el administrador,
        //    permite la escritura (esto es MODIFICACIÓN o ELIMINACIÓN, solo el admin puede hacerlo).
        ".write": "(!data.exists() && newData.exists()) || (data.exists() && auth != null && auth.uid === 'CTedcSU9XuV2QBbTdTilDHuCgAj2')",

        // Validación de la estructura de los datos de la cita:
        // - Si se está eliminando la cita (newData no existe), la validación pasa.
        // - Si se está creando o actualizando, la nueva data DEBE tener los campos especificados.
        ".validate": "!newData.exists() || newData.hasChildren(['id', 'name', 'phone', 'email', 'serviceId', 'date', 'time', 'status', 'requestedAt'])"
      }
    }
  }
}
